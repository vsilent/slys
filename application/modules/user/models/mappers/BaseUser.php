<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User_Model_Mapper_BaseUser', 'doctrine');

/**
 * User_Model_Mapper_BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $login
 * @property string $password
 * @property integer $role_id
 * @property boolean $active
 * @property string $firstname
 * @property string $lastname
 * @property string $patronymic
 * @property string $birth
 * @property string $email
 * @property string $phone
 * @property string $zip
 * @property string $token
 * @property datetime $token_date
 * @property User_Model_Mapper_Role $Role
 * @property Doctrine_Collection $Products
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: BaseUser.php 1279 2011-07-19 09:27:09Z zak $
 */
class User_Model_Mapper_BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user_users');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('login', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'length' => '32',
             ));
        $this->hasColumn('role_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('patronymic', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('birth', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('zip', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('token_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User_Model_Mapper_Role as Role', array(
             'local' => 'role_id',
             'foreign' => 'id'));

        $this->hasMany('News_Model_Mapper_News as Products', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}